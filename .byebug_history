exit
result
i
exit
pair[i].rank
pair[i]
exit
pairs
exit
player.pairs
player.pairs << pairs.flatten
pairs.flatten
player.pairs
player
pairs
exit
pairs.empty
pairs
exit
c
player
n
pairs.flatten
pairs
n
paired
n
display_community_cards
n
c
paired
n
paired
n
!paired.include?(card)
n
display_community_cards
c
display_community_cards
exit
community_cards[i+1]
card
exit
player.hand
player
player.card
player
exit
pairs
n
paired
n
community_cards[i+1]
card
card.rank
exit
community_cards[i]
community_cards
card
exit
pairs
n
display_community_cards
exit
display_community_cards
exit
display_community_cards
c
player.display_pairs
n
display_community_cards
pairs.flatten
pairs
n
paired
n
exit
pairs
n
pairs
paires
n
pairs
paired
n
pairs
n
paired
pairs
n
paired
n
!paired.include?(card)
paired
n
exit
paired
display_community_cards
exit
display_community_cards
exit
display_community_cards
exit
display_community_cards
exit
display_community_cards
exit
c
n
display_community_cards
exit
!pairs.include?(card)
n
community_cards[i + 1].rank
card
display_community_cards
exit
check_community_hand_against_community(player)
exit
check_community_hand_against_community(player).flatten
check_community_hand_against_community(player).flattten
check_community_hand_against_community(player)
exit
check_community_hand_against_community(player)
display_community_cards
exit
display_community_cards
 check_community_hand_against_community(player)
exit
 check_community_hand_against_community(player)
display_community_cards
exit
display_community_cards
exit
display_community_cards
exit
display_community_cards
display_community_hand
display_community_hands
display_community_hand
check_community_hand_against_community(player)
check_player_hand_against_community(player)
exit
i
community_cards[i + 1].rank
c
community_cards[i + 1].rank
community_cards[i + 1]
card.rank
c
community_cards[i+1].rank
card.rank
display_community_cards
community_cards
exit
c
paired
c
paired
paried
c
paired
paried
exit
display_community_cards
pairs
exit
c
community_cards[i + 1].rank
community_cards[i + 1]
community_cards
card.rank
card_count
exit
eixt
card_count
exit
card_count
exit
card
exit
player.hand
hands
player_hand
hand
community_cards
hand
card
card.rank
hand.rank
exit
community_cards
@community_cards
community_cards
c
community_cards
next_five_cards
@community_cards
exit
@cards
c
n
@cards
n
exit
pairs.each do |exit
pairs
c
d
pairs
c
pairs
exit
par[0].rank == par[1].rank
par = pairs[1]
pairs[1]
pairs
exit
c
player.pairs
c
player
n
player.hand
community_cards
player.pairs
n
c
player.pairs
player
c
display_community_cards
community_cards
player.hand
exit
community_cards.count
player.hand
community_cards
card
hand
exit
exigt
player.hand
player.pairs.count
player.pairs
exit
player.hand
player.pairs
game.display_community_cards
game.community_cards
player.pairs
exit
hand
habd
pairs
player
